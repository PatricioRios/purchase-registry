// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/category": {
            "get": {
                "description": "Get all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "OK\"\t\t\t\t\texample:\"[{\\\"id\\\":1, \\\"name\\\":\\\"Electronics\\\", \\\"created_at\\\":1627580400, \\\"updated_at\\\":1627580400}]",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryPurchase"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error\"\texample:\"{\\\"error\\\": \\\"Internal\tserver\terror\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "parameters": [
                    {
                        "description": "Category to update",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoryPurchase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated category\"\t\texample:\"{\\\"id\\\":1, \\\"name\\\":\\\"Electronics\\\", \\\"created_at\\\":1627580400, \\\"updated_at\\\":1627580400}",
                        "schema": {
                            "$ref": "#/definitions/CategoryPurchase"
                        }
                    },
                    "400": {
                        "description": "Invalid input\"\t\t\texample:\"{\\\"error\\\": \\\"Invalid\tinput\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error\"\texample:\"{\\\"error\\\": \\\"Internal\tserver\terror\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category to create",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoryPurchase"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created category\"\t\texample:\"{\\\"id\\\":1, \\\"name\\\":\\\"Electronics\\\", \\\"created_at\\\":1627580400, \\\"updated_at\\\":1627580400}",
                        "schema": {
                            "$ref": "#/definitions/CategoryPurchase"
                        }
                    },
                    "400": {
                        "description": "Invalid input\"\t\t\texample:\"{\\\"error\\\": \\\"Invalid\tinput\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error\"\texample:\"{\\\"error\\\": \\\"Internal\tserver\terror\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/category/{id}": {
            "get": {
                "description": "Get a category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK\"\t\t\t\t\texample:\"{\\\"id\\\":1, \\\"name\\\":\\\"Electronics\\\", \\\"created_at\\\":1627580400, \\\"updated_at\\\":1627580400}",
                        "schema": {
                            "$ref": "#/definitions/CategoryPurchase"
                        }
                    },
                    "400": {
                        "description": "Invalid ID\"\t\t\texample:\"{\\\"error\\\": \\\"ID\t\tinválido\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    },
                    "404": {
                        "description": "Category not found\"\texample:\"{\\\"error\\\": \\\"Category\tnot\t\tfound\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error\"\texample:\"{\\\"error\\\": \\\"Internal\tserver\terror\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted message\"\texample:\"{\\\"message\\\": \\\"Categoría\teliminada\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseOk"
                        }
                    },
                    "400": {
                        "description": "Invalid ID\"\t\t\t\texample:\"{\\\"error\\\": \\\"ID\t\t\tinválido\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error\"\t\texample:\"{\\\"error\\\": \\\"Internal\t\tserver\terror\\\"}",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/compra": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compras"
                ],
                "summary": "Get version of app application",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Purchase"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/liveness": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Misc"
                ],
                "summary": "Liveness endpoint",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/readiness": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Misc"
                ],
                "summary": "Readiness endpoint",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/version": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Misc"
                ],
                "summary": "Get version of app application",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOk"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CategoryPurchase": {
            "type": "object",
            "properties": {
                "compras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Purchase"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "Purchase": {
            "description": "Compra asdasd",
            "type": "object",
            "properties": {
                "articulos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Article"
                    }
                },
                "categoria_id": {
                    "description": "Foreign key",
                    "type": "integer"
                },
                "category": {
                    "$ref": "#/definitions/CategoryPurchase"
                },
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "description": "@Description Descripcion de la compra",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "import": {
                    "description": "@Description",
                    "type": "number"
                },
                "title": {
                    "description": "@Description Titulo de la compra",
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "ResponseError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "ResponseOk": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Article": {
            "type": "object",
            "properties": {
                "compra": {
                    "$ref": "#/definitions/Purchase"
                },
                "compra_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
